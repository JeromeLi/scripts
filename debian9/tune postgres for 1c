# https://kb.1c.ru/articleView.jsp?id=91
sudo cp /etc/postgresql/9.6/main/postgresql.conf /etc/postgresql/9.6/main/postgresql.conf.original
# RAM 12 GB RAM - объем оперативной памяти сервера. Если сервер используется не только для PostgreSQL,
# то надо уменьшить эту величину на объем занятой памяти.
#
# shared_buffers = RAM/4
# Количество памяти, выделенной PgSQL для совместного кеша страниц. Эта память разделяется между всеми процессами PgSQL.
sudo sed -i 's/shared_buffers = 128MB/shared_buffers = 3GB/' /etc/postgresql/9.6/main/postgresql.conf
#
#Максимальное количество страниц для временных таблиц. Т.е. это верхний лимит размера временных таблиц в каждой сессии.
sudo sed -i 's/#temp_buffers = 8MB/temp_buffers = 256MB/' /etc/postgresql/9.6/main/postgresql.conf 
#
# work_mem = RAM/32..64 или 32MB..128MB
# Лимит памяти для обработки одного запроса
sudo sed -i 's/#work_mem = 4MB/work_mem = 192MB/' /etc/postgresql/9.6/main/postgresql.conf
#
#  maintenance_work_mem = RAM/16..32 или work_mem * 4 или 256MB..4GB
# Лимит памяти для обслуживающих задач, например вакуум, автовакуум или создания индексов.
sudo sed -i 's/#maintenance_work_mem = 64MB/maintenance_work_mem = 768MB/' /etc/postgresql/9.6/main/postgresql.conf
#
# effective_cache_size = RAM - shared_buffers
# Оценка размера кеша файловой системы. Увеличение параметра увеличивает склонность системы выбирать IndexScan планы. И это хорошо.
sudo sed -i 's/#effective_cache_size = 4GB/effective_cache_size = 9GB/' /etc/postgresql/9.6/main/postgresql.conf
#
# Оценочное значение одновременных запросов к дисковой системе, которые она может обслужить единовременно.
# Для одиночного диска = 1, для RAID - 2 или больше.
sudo sed -i 's/#effective_io_concurrency = 1/effective_io_concurrency = 2/' /etc/postgresql/9.6/main/postgresql.conf
#
# Стоимость чтения рандомной страницы (по-умолчанию 4). Чем меньше seek time дисковой системы тем меньше (но > 1.0)
# должен быть этот параметр. Излишне большое значение параметра увеличивает склонность PgSQL к выбору планов
# с сканированием всей таблицы (PgSQL считает, что дешевле последовательно читать всю таблицу, чем рандомно индекс). И это плохо.
sudo sed -i 's/#random_page_cost = 4.0/random_page_cost = 1.5/' /etc/postgresql/9.6/main/postgresql.conf
#
# Включение автовакуума. Не выключайте его!
sudo sed -i 's/#autovacuum = on/autovacuum = on/' /etc/postgresql/9.6/main/postgresql.conf
#
# autovacuum_max_workers = NCores/4..2 но не меньше 4
# Количество процессов автовакуума. Общее правило - чем больше write-запросов,
# тем больше процессов. На read-only базе данных достаточно одного процесса.
sudo sed -i 's/#autovacuum_max_workers = 3/autovacuum_max_workers = 4/' /etc/postgresql/9.6/main/postgresql.conf
#
# Время сна процесса автовакуума. Слишком большая величина будет приводить к тому, что таблицы не будут
# успевать вакуумиться и, как следствие, вырастет bloat и размер таблиц и индексов. Малая величина приведет к бесполезному нагреванию.
sudo sed -i 's/#autovacuum_naptime = 1min/autovacuum_naptime = 20s/' /etc/postgresql/9.6/main/postgresql.conf
#
# Время сна между циклами записи на диск фонового процесса записи. Данный процесс ответственен за синхронизацию страниц,
# расположенных в shared_buffers с диском. Слишком большое значение этого параметра приведет к возрастанию нагрузки
# на  checkpoint процесс и процессы, обслуживающие сессии (backend). Малое значение приведет к полной загрузке одного из ядер.
sudo sed -i 's/#bgwriter_delay = 200ms/bgwriter_delay = 20ms/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#bgwriter_lru_multiplier = 2.0/bgwriter_lru_multiplier = 4.0/' /etc/postgresql/9.6/main/postgresql.conf
#
# Параметры, управляющие интенсивностью записи фонового процесса записи. За один цикл bgwriter записывает не больше,
# чем было записано в прошлый цикл, умноженное на bgwriter_lru_multiplier, но не больше чемbgwriter_lru_maxpages.
sudo sed -i 's/#bgwriter_lru_maxpages = 100/bgwriter_lru_maxpages = 400/' /etc/postgresql/9.6/main/postgresql.conf
#
# Выключение синхронизации с диском в момент коммита. Создает риск потери последних нескольких транзакций
# (в течении 0.5-1 секунды), но гарантирует целостность базы данных, в цепочке коммитов гарантированно отсутствуют
# пропуски. Но значительно увеличивает производительность.
sudo sed -i 's/#synchronous_commit = on/synchronous_commit = off/' /etc/postgresql/9.6/main/postgresql.conf
#
# !!! checkpoint_segments ????????????????????????????????????
#
# Степень "размазывания" checkpoint'a. Скорость записи во время checkpoint'а регулируется так, что бы время
# checkpoint'а было равно времени, прошедшему с прошлого, умноженному на checkpoint_completion_target. 
sudo sed -i 's/#checkpoint_completion_target = 0.5/checkpoint_completion_target = 0.9/' /etc/postgresql/9.6/main/postgresql.conf
#
#
#
# Минимальное и максимальный объем WAL файлов. Аналогично checkpoint_segments
sudo sed -i 's/#min_wal_size = 80MB/min_wal_size = 2GB/' /etc/postgresql/9.6/main/postgresql.conf
sudo sed -i 's/#max_wal_size = 1GB/max_wal_size = 4GB/' /etc/postgresql/9.6/main/postgresql.conf
#
# Выключение шифрования. Для защищенных ЦОД'ов шифрование бессмысленно, но приводит к увеличению загрузки CPU
sudo sed -i 's/ssl = true/ssl = false/' /etc/postgresql/9.6/main/postgresql.conf
#
# Выключение параметра приводит к росту производительности, но появляется значительный риск потери всех данных
# при внезапном выключении питания. Внимание: если RAID имеет кеш и находиться в режиме write-back,
# проверьте наличие и функциональность батарейки кеша RAID контроллера! Иначе данные записанные в кеш RAID могут быть потеряны при выключении питания, и, как следствие, PgSQL не гарантирует целостность данных.
sudo sed -i 's/#fsync = on/fsync = on/' /etc/postgresql/9.6/main/postgresql.conf
#
# Групповой коммит нескольких транзакций. Имеет смысл включать, если темп транзакций превосходит 1000 TPS. Иначе эффекта не имеет.
sudo sed -i 's/#commit_delay = 0/commit_delay = 1000/' /etc/postgresql/9.6/main/postgresql.conf
sudo sed -i 's/#commit_siblings = 5/commit_siblings = 5/' /etc/postgresql/9.6/main/postgresql.conf
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! temp_tablespaces = ''
#
# Отключение контроля разрешения уровня записи
sudo sed -i 's/#row_security = on/row_security = off/' /etc/postgresql/9.6/main/postgresql.conf
#
#  !!!!!!!!!!!!!!! pg_stat_temp
#
# Максимальное количество открытых файлов на один процесс PostreSQL. Один файл это как минимум либо индекс либо таблица,
# но таблица/может состоять из нескольких файлов. Если PostgreSQL упирается в этот лимит, он начинает открывать/закрывать файлы,
# что может сказываться на производительности. Диагностировать проблему под Linux можно с помощью команды lsof.
sudo sed -i 's/#max_files_per_process = 1000/max_files_per_process = 1000/' /etc/postgresql/9.6/main/postgresql.conf
#
# Разрешить использовать символ \ для экранирования
sudo sed -i 's/#standard_conforming_strings = on/standard_conforming_strings = off/' /etc/postgresql/9.6/main/postgresql.conf
#
# Не выдавать предупреждение о использовании символа \ для экранирования
sudo sed -i 's/#escape_string_warning = on/escape_string_warning = off/' /etc/postgresql/9.6/main/postgresql.conf
#
#
# Максимальное число блокировок индексов/таблиц в одной транзакции
sudo sed -i 's/max_locks_per_transaction = 150/max_locks_per_transaction = 256/' /etc/postgresql/9.6/main/postgresql.conf
#
# Количество одновременных коннектов/сессий
sudo sed -i 's/max_connections = 100/max_connections = 500/' /etc/postgresql/9.6/main/postgresql.conf
#
#
sudo sed -i 's/#log_min_duration_statement = -1/log_min_duration_statement = 0/' /etc/postgresql/9.6/main/postgresql.conf
#
# log_line_prefix = '%t [%p]: [%l-1] ' или '%t [%p]: [%l-1] user=%u,db=%d,client=%h '
#sudo sed -i 's/log_line_prefix = '%t [%p-%l] %q%u@%d '/log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,client=%h '/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_checkpoints = off/log_checkpoints = on/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_connections = off/log_connections = on/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_disconnections = off/log_disconnections = on/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_lock_waits = off/log_lock_waits = on/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_temp_files = -1/log_temp_files = 0/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_autovacuum_min_duration = -1/log_autovacuum_min_duration = 0/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/lc_messages = 'ru_RU.UTF-8'/lc_messages = "C"/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_duration = off/log_duration = on/' /etc/postgresql/9.6/main/postgresql.conf
#
sudo sed -i 's/#log_statement = "none"/log_statement = "all"/' /etc/postgresql/9.6/main/postgresql.conf
#
#sudo sed -i 's/log_destination = 'stderr'/log_destination = 'stderr'/' /etc/postgresql/9.6/main/postgresql.conf
#
# plantuner.fix_empty_table !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#---------------------------------------------------------------------------------------------------------------------------
#
#sudo sed -i 's/#wal_buffers = -1/wal_buffers = 16MB/' /etc/postgresql/9.6/main/postgresql.conf
#
#sudo sed -i 's/#default_statistics_target = 100/default_statistics_target = 100/' /etc/postgresql/9.6/main/postgresql.conf
#
#sudo sed -i 's/#autovacuum_vacuum_scale_factor = 0.2/autovacuum_vacuum_scale_factor = 0.01/' /etc/postgresql/9.6/main/postgresql.conf
#sudo sed -i 's/#autovacuum_analyze_scale_factor = 0.1/autovacuum_analyze_scale_factor = 0.05/' /etc/postgresql/9.6/main/postgresql.conf
#sudo sed -i 's/#synchronous_commit = on/synchronous_commit = off/' /etc/postgresql/9.6/main/postgresql.conf
